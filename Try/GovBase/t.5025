The NIST Prototype Implementation of the ATSC DASE standard NIST ATSC DASE DTV Digital Television standard interactive TV enhanced TV 10 days NIST DASE Applications StockTicker Xlet Group Logo dasehome html Home http www itl nist gov div895 CIS Home http www nist gov itl ITL Home http www nist gov NIST Home faq html FAQ download html Download documentation html Documentation http www dase2001 nist gov Symposium GENERAL dasehome html Home slides html Project Slides disclaimer html Disclaimer faq html FAQ http www dase2001 nist gov DASE Symposium archive html Archive PRODUCTS download html Download simulation html STB Simulation implementation html API Implementation applications html DASE Applications tools html Tools documentation html Documentation SUPPORT contact html Contact Us sites html Related Sites mailto dase nist gov E support http www nist gov public affairs events htm NIST Information PUBLICATIONS docs slides2000 ppt DASE 2000 Slides docs slides2001 ppt DASE 2001 Slides NIST DASE Applications DASE Stock Ticker Xlet DASE Stock Ticker Xlet The Stock Ticker Xlet presents dynamic stock quote information to a television screen in a DASE environment see Figure 1 The Xlet uses the Data Carousel APIs to obtain the broadcast stock quote data The data file is sent as data carousel modules with an associated universal resource identifier URI The data contains the stock symbol current price delta and time of the quote The Xlet reads this information via the data carousel API and displays the information to the television screen The information is presented as scrolling text The DASE HAVi Application Programming Interface is use create the scrolling stock ticker widget The StockTicker Xlet demonstrates the use of the Data Carousel Xlet Havi and Locator APIs Figure l Stock Ticker Xlet Display Components The Stock Ticker Xlet depends on a number of Java class file components StockTicker and StockText are the Xlet components StockStreamer is the data source module QuoteList is the bridge module where StockStreamer writes data and StockTicker reads it QuoteFileGen is a utility tool to create the initial set of stock quotes Below a summery of each component is given The interactions between the components are given in Figure 2 Note that the StockTicker StockText and QuoteList comprise the Xlet components StockStreamer and QuoteFileGen are utility components in the head end environment that are use to stream stock quote and to build stock quote data StockTicker This is the Xlet class that displays the stock ticker It is responsible for opening and reading from the carousel file After successfully reading stock quote data it displays the stock ticker to the television screen StockTicker uses the StockDataModel to help create the stock ticker table The StockTicker Xlet implements the Xlet and CarouselFileListener interfaces It receives quote updates via the CarouselFileListener StockText This class provides the scrolling stock ticker text widget StockText uses HAVi components to the build the user interface StockStreamer This class is responsible from generating a stream of stock quotes It creates a stream of QuoteList objects and writes these to the data carousel FIFO This is a stand alone component QuoteList This class is an instance of the stock quote data QuoteList contains the entire list of quotes QuoteList has an inner class Quote that represents a single stock quote A Quote consists of a Symbol stock name a Price current value a Delta change since the last closing price and the time of the quote QuoteFileGen This class generates the initial set of stock symbols The StockStreamer reads the created file Figure 2 Stock Ticker Components Compile Environment Setup and Run Instructions Compiling Unix This Xlet requires that the jreX extensions for the data carousel be compiled in Do this by including the with jrex flag during configure In the nist ri root level directory use the following commands Make sure that the distribution you have includes the jreX extensions See the User s Guide for complete details on compiling the distribution environemnt and running Xlets configure with jrex make Setting up the Run Environment Unix To enable the data carousel runtime extensions the environment must be set as shown below csh Note the alias j also needs to be set as is for running Xlets that use the jreX See the User s Guide for complete csh and bash examples setenv JAVA HOME usr java setenv JMFHOME usr jmf setenv HOME export home rob setenv ROOTDIR HOME nist ri setenv RUNTIME ROOTDIR simulation runtime setenv JAVA ARCH i386 setenv CLASSPATH RUNTIME stb jar RUNTIME devkit jar RUNTIME dase jar JMFHOME lib jmf jar alias j java Xbootclasspath RUNTIME jreX jar JAVA HOME jre lib rt jar CLASSPATH Dsun boot library path JAVA HOME jre lib i386 RUNTIME Running Unix Note all cd commands are relative from the NIST Reference Implementation root directory nist ri 1 Create quote list file cd HOME java classpath CLASSPATH applications xlets stock QuoteFileGen GE 45 32 0 50 WMT 55 75 1 50 AMD 26 65 2 25 TXN 39 00 1 25 EBAY 46 34 0 75 Note 1 This will create a file named quotelist Use this file as input to StockStreamer You can use this to create your own data Note 2 A sample quoteList serial file can be found in HOME nist ri simulation data You can use this file and skip this step 2 Start the simulation and launch the RunXlet utility cd HOME j gov nist hwabstract JavaSTBMain tools simulation RunXlet Note Go to step 3 come back to the Simulator in step 4 3 Start StockStreamer in another xterm java classpath CLASSPATH applications xlets stock StockStreamer i quotelist o HOME inputFIFO pat t 2000 Notes Make sure the CLASSPATH includes the devkit jar and stb jar files The i quotelist indicates the file to read the initial quotes from Make sure quotelist is accessible to the StockStreamer application pat indicates to send in a psip program association table This table will signify a lid in this case lid nist gov data stockdata The StockTicker Xlet will use this lid to obtain a locator The t 2000 indicates an interval in milliseconds to send the stock quotes In this case it is 2 seconds o HOME inputFIFO indicates the fifo set with Simulator HOME inputFIFO is the default location 4 Start StockTicker Xlet go back to the Simulator RunXlet program RunXlet applications xlets stock StockTicker Notes RunXlet tells the Application Manager to load and run the Xlet Make sure the Xlet s class files are located in CLASSPATH Setting the CLASSPATH as specified above will be sufficient since it contains devkit jar NIST DASE API Reference Implementation StockTicker java Last changed on Date 2001 06 15 15 29 30 UTC See the file nist disclaimer in the top level directory for information on usage and redistribution of this file package applications xlets stock import java awt import java io import org havi ui import javax tv xlet import javax tv graphics TVContainer import javax tv carousel import javax tv locator import applications utils public class StockTicker implements Xlet CarouselFileListener Save the XletContext we receive from the Xlet manager private XletContext xletContext private boolean running Tells whether to continue running private boolean paused Tells whether we are paused private String URI lid nist gov data stockdata private Container tvScreen private Label statusLabel private HScene myHScene private HMatte sceneMatte private StockText outputText text field for Xlet output private CarouselFile cf null private QuoteList Quote quotes The Xlet implementation methods public void initXlet XletContext ctx throws XletStateChangeException System out println StockTicker hello getCarouselFile readQuotes tvScreen TVContainer getRootContainer ctx statusLabel new Label null Label CENTER statusLabel setFont new Font SansSerif Font BOLD 16 statusLabel setSize 30 30 HSceneTemplate hst new HSceneTemplate hst setPreference HSceneTemplate SCENE PIXEL RECTANGLE new Rectangle 200 375 550 300 HSceneTemplate REQUIRED myHScene HSceneFactory getInstance getBestScene hst sceneMatte new HFlatMatte 0 4F outputText new StockText outputText setLocation 50 myHScene getSize height 20 outputText setBackground Color white outputText setForeground Color blue outputText setSize myHScene getSize width 50 20 outputText setMatte sceneMatte myHScene add outputText tvScreen setLayout new BorderLayout tvScreen add North statusLabel tvScreen setSize 100 100 xletContext ctx paused true public void startXlet throws XletStateChangeException statusLabel setText StockTicker Xlet Started System out println running try cf addListener this catch Exception e System out println addListener failed paused false Check to make sure we are not already running If we are then we might be in the paused state so tell the XletContext to resume us If we are not running then just call our internal method to start running if running previously running xletContext resumeRequest else running true this run public void pauseXlet statusLabel setText Xlet Paused paused true xletContext notifyPaused cf removeListener this public void destroyXlet boolean unconditional throws XletStateChangeException running false statusLabel setText Xlet Destroyed cf removeListener this Release the HScene we are using HSceneFactory getInstance dispose myHScene We may have been loaded but not init d so check whether we have an XletContext object if xletContext null xletContext notifyDestroyed public void run while running try Thread sleep 1000 catch InterruptedException e public void carouselFileChanged CarouselFileChangeEvent event cf refreshCache readQuotes for int i 0 i quotes length i outputText add quotes i getName quotes i getValue quotes i getDelta public void getCarouselFile Locator locator null LocatorFactory lf LocatorFactory getInstance Locator list null try Wait for quotes while locator null try locator lf createLocator URI list lf transformLocator locator cf new CarouselFile list 0 catch InvalidLocatorException e System out println StockTicker caught e toString locator null if locator null Thread sleep 100 catch MalformedLocatorException e System out println StockTicker caught e toString catch FileNotFoundException e System out println StockTicker caught e toString catch IOException e System out println StockTicker caught e toString catch InterruptedException e System out println StockTicker caught e toString finally release for garbage collection locator null lf null public void readQuotes ObjectInputStream inStream null try inStream new ObjectInputStream new FileInputStream cf catch FileNotFoundException e System out println FileNotFoundException e toString catch IOException e System out println IOException e toString QuoteList aQuoteList null try aQuoteList QuoteList inStream readObject catch ClassNotFoundException e System out println ClassNotFoundException e toString catch IOException e System out println IOException e toString quotes aQuoteList getArrayOfQuote http www nist gov public affairs privacy htm Privacy Statement Security Notice http www nist gov public affairs disclaim htm Disclaimer http www nist gov admin foia foia htm FOIA NIST is an agency of the http www doc gov U S Commerce Department s http www ta doc gov Technology Administration Web page comments to mailto webmaster cmr ncsl nist gov webmaster cmr ncsl nist gov Date created 5 08 2001 Last updated 9 25 2001
